{"abi":[{"type":"function","name":"acceptAdminRole","inputs":[{"name":"localToken","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getPool","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"proposeAdministrator","inputs":[{"name":"localToken","type":"address","internalType":"address"},{"name":"administrator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPool","inputs":[{"name":"localToken","type":"address","internalType":"address"},{"name":"pool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferAdminRole","inputs":[{"name":"localToken","type":"address","internalType":"address"},{"name":"newAdmin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptAdminRole(address)":"156194da","getPool(address)":"bbe4f6db","proposeAdministrator(address,address)":"e677ae37","setPool(address,address)":"4e847fc7","transferAdminRole(address,address)":"ddadfa8e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"}],\"name\":\"acceptAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"administrator\",\"type\":\"address\"}],\"name\":\"proposeAdministrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptAdminRole(address)\":{\"details\":\"This function can only be called by the pending administrator.\",\"params\":{\"localToken\":\"The token to accept the administrator role for.\"}},\"proposeAdministrator(address,address)\":{\"params\":{\"administrator\":\"The administrator to register.\",\"localToken\":\"The token to register the administrator for.\"}},\"setPool(address,address)\":{\"params\":{\"localToken\":\"The token to set the pool for.\",\"pool\":\"The pool to set for the token.\"}},\"transferAdminRole(address,address)\":{\"details\":\"The new admin must call `acceptAdminRole` to accept the role.\",\"params\":{\"localToken\":\"The token to transfer the administrator role for.\",\"newAdmin\":\"The address to transfer the administrator role to. Can be address(0) to cancel a pending transfer.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptAdminRole(address)\":{\"notice\":\"Accepts the administrator role for a token.\"},\"getPool(address)\":{\"notice\":\"Returns the pool for the given token.\"},\"proposeAdministrator(address,address)\":{\"notice\":\"Proposes an administrator for the given token as pending administrator.\"},\"setPool(address,address)\":{\"notice\":\"Sets the pool for a token. Setting the pool to address(0) effectively delists the token from CCIP. Setting the pool to any other address enables the token on CCIP.\"},\"transferAdminRole(address,address)\":{\"notice\":\"Transfers the administrator role for a token to a new address with a 2-step process.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-ccip/chains/evm/contracts/interfaces/ITokenAdminRegistry.sol\":\"ITokenAdminRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/contracts-ccip/=lib/chainlink-ccip/chains/evm/\",\":@chainlink/contracts/=lib/chainlink-evm/contracts/\",\":@chainlink/local/=node_modules/@chainlink/local/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@zksync/=node_modules/@zksync/\",\":chainlink-ccip/=lib/chainlink-ccip/\",\":chainlink-evm/=lib/chainlink-evm/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solady/=node_modules/solady/\"]},\"sources\":{\"lib/chainlink-ccip/chains/evm/contracts/interfaces/ITokenAdminRegistry.sol\":{\"keccak256\":\"0xbaf636acea653acae0832636a675f2a830088b4ff7d0a5193daa6f583ba966ae\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c4718c15967437278bfff824ff648db6205d9f24e4cf0ab53207bd06e1a41692\",\"dweb:/ipfs/QmQiQs6UcutkifptZTcM6uaW6TtBKDqjw8kz2yDKKMWqng\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"localToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"acceptAdminRole"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"localToken","type":"address"},{"internalType":"address","name":"administrator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"proposeAdministrator"},{"inputs":[{"internalType":"address","name":"localToken","type":"address"},{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPool"},{"inputs":[{"internalType":"address","name":"localToken","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferAdminRole"}],"devdoc":{"kind":"dev","methods":{"acceptAdminRole(address)":{"details":"This function can only be called by the pending administrator.","params":{"localToken":"The token to accept the administrator role for."}},"proposeAdministrator(address,address)":{"params":{"administrator":"The administrator to register.","localToken":"The token to register the administrator for."}},"setPool(address,address)":{"params":{"localToken":"The token to set the pool for.","pool":"The pool to set for the token."}},"transferAdminRole(address,address)":{"details":"The new admin must call `acceptAdminRole` to accept the role.","params":{"localToken":"The token to transfer the administrator role for.","newAdmin":"The address to transfer the administrator role to. Can be address(0) to cancel a pending transfer."}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptAdminRole(address)":{"notice":"Accepts the administrator role for a token."},"getPool(address)":{"notice":"Returns the pool for the given token."},"proposeAdministrator(address,address)":{"notice":"Proposes an administrator for the given token as pending administrator."},"setPool(address,address)":{"notice":"Sets the pool for a token. Setting the pool to address(0) effectively delists the token from CCIP. Setting the pool to any other address enables the token on CCIP."},"transferAdminRole(address,address)":{"notice":"Transfers the administrator role for a token to a new address with a 2-step process."}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/contracts-ccip/=lib/chainlink-ccip/chains/evm/","@chainlink/contracts/=lib/chainlink-evm/contracts/","@chainlink/local/=node_modules/@chainlink/local/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=lib/openzeppelin-contracts/","@scroll-tech/=node_modules/@scroll-tech/","@zksync/=node_modules/@zksync/","chainlink-ccip/=lib/chainlink-ccip/","chainlink-evm/=lib/chainlink-evm/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solady/=node_modules/solady/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/chainlink-ccip/chains/evm/contracts/interfaces/ITokenAdminRegistry.sol":"ITokenAdminRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"lib/chainlink-ccip/chains/evm/contracts/interfaces/ITokenAdminRegistry.sol":{"keccak256":"0xbaf636acea653acae0832636a675f2a830088b4ff7d0a5193daa6f583ba966ae","urls":["bzz-raw://c4718c15967437278bfff824ff648db6205d9f24e4cf0ab53207bd06e1a41692","dweb:/ipfs/QmQiQs6UcutkifptZTcM6uaW6TtBKDqjw8kz2yDKKMWqng"],"license":"BUSL-1.1"}},"version":1},"id":9}